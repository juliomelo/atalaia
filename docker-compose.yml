services:
    movements:
        build:
            target: final
        image: brjuliomelo/atalaia-streaming
        cap_add:
            - SYS_PTRACE
        security_opt:
            - seccomp:unconfined
        command: movements amqp://rabbitmq -e ATALAIA_URLS 
        volumes:
            # Mounts the project folder to '/workspace'. While this file is in .devcontainer,
            # mounts are relative to the first file in the list, which is a level up.
            - /tmp/.X11-unix:/tmp/.X11-unix
            - recording:/data/local
        environment:
            DISPLAY: :0
        depends_on:
            rabbitmq:
                condition: service_healthy
        env_file:
            - ./video_urls.env
        # networks:
        #     - atalaia-services

    objects:
        build:
            target: final
        image: brjuliomelo/atalaia-streaming
        cap_add:
            - SYS_PTRACE
        security_opt:
            - seccomp:unconfined
        command: objects amqp://rabbitmq 
        volumes:
            # Mounts the project folder to '/workspace'. While this file is in .devcontainer,
            # mounts are relative to the first file in the list, which is a level up.
            - /tmp/.X11-unix:/tmp/.X11-unix
            - recording:/data/local
        environment:
            DISPLAY: :0
        depends_on:
            rabbitmq:
                condition: service_healthy
        # networks:
        #     - atalaia-services
            
    rabbitmq:
        image: rabbitmq:3.8.3-alpine
        # networks:
        #     - atalaia-services
        healthcheck:
            test: ["CMD", "rabbitmqctl", "eval", "{ true, rabbit_app_booted_and_running } = { rabbit:is_booted(node()), rabbit_app_booted_and_running }, { [], no_alarms } = { rabbit:alarms(), no_alarms }, [] /= rabbit_networking:active_listeners(), rabbitmq_node_is_healthy."]
            interval: 1m30s
            timeout: 30s
            retries: 5
            start_period: 10s

    telegram:
        image: brjuliomelo/telegram-reporter
        build:
            context: telegram-reporter
        volumes:
            - recording:/data/local
        depends_on:
            rabbitmq:
                condition: service_healthy
        env_file:
            - ./video_urls.env
        # networks:
        #     - atalaia-services

volumes:
    recording:

# networks:
#     atalaia-services:
#     external:
#         driver: bridge